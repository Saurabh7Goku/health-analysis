{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///C:/saurabh/Projects/health-analysis/app/components/HealthForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\nimport { useEffect, useCallback } from 'react';\r\nimport { jsPDF } from 'jspdf';\r\nimport { User, Calendar, Activity, Ruler, Weight, Heart, FileText, Download, Calculator } from 'lucide-react';\r\nimport { useState } from 'react';\r\n\r\nconst schema = z.object({\r\n    name: z.string().min(1, 'Name is required'),\r\n    age: z.number().min(1, 'Age must be at least 1').max(120, 'Age must be less than 120'),\r\n    gender: z.enum(['male', 'female'], { errorMap: () => ({ message: 'Gender is required' }) }),\r\n    height: z.number().min(50, 'Height must be at least 50 cm').max(300, 'Height must be less than 300 cm'),\r\n    weight: z.number().min(10, 'Weight must be at least 10 kg').max(500, 'Weight must be less than 500 kg'),\r\n    activityLevel: z.enum(['sedentary', 'lightly', 'moderately', 'very'], {\r\n        errorMap: () => ({ message: 'Activity level is required' }),\r\n    }),\r\n    healthConditions: z.string().optional(),\r\n});\r\n\r\ninterface HealthResults {\r\n    name: string;\r\n    bmi: {\r\n        value: number;\r\n        interpretation: string;\r\n    };\r\n    bmr: number;\r\n    calorieNeeds: number;\r\n    recommendations: string[];\r\n}\r\n\r\n\r\ntype FormData = z.infer<typeof schema>;\r\n\r\ninterface HealthFormProps {\r\n    setResults: React.Dispatch<React.SetStateAction<HealthResults | null>>;\r\n    results: HealthResults | null;\r\n}\r\n\r\n\r\nexport default function HealthForm({ setResults, results }: HealthFormProps) {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset,\r\n        watch,\r\n        setValue,\r\n    } = useForm<FormData>({\r\n        resolver: zodResolver(schema),\r\n        defaultValues: {\r\n            name: '',\r\n            age: 0,\r\n            gender: undefined,\r\n            height: 0,\r\n            weight: 0,\r\n            activityLevel: undefined,\r\n            healthConditions: '',\r\n        },\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [timer, setTimer] = useState(0);\r\n\r\n\r\n    const watchedActivityLevel = watch('activityLevel');\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            const savedData = localStorage.getItem('formData');\r\n            if (savedData) {\r\n                try {\r\n                    const parsedData = JSON.parse(savedData);\r\n                    reset(parsedData);\r\n                    Object.keys(parsedData).forEach((key) => {\r\n                        if (parsedData[key] !== undefined && parsedData[key] !== null) {\r\n                            setValue(key as keyof FormData, parsedData[key]);\r\n                        }\r\n                    });\r\n                } catch (error) {\r\n                    console.error('Error parsing saved form data:', error);\r\n                    localStorage.removeItem('formData');\r\n                }\r\n            }\r\n        }\r\n    }, [reset, setValue]);\r\n\r\n    const onSubmit: SubmitHandler<FormData> = useCallback(\r\n        async (data: FormData, event?: React.BaseSyntheticEvent) => {\r\n            event?.preventDefault(); // Prevent default form submission\r\n            if (loading) return;\r\n            console.log('onSubmit called'); // Debug log\r\n            setLoading(true);\r\n            setTimer(10);\r\n\r\n            const intervalId = setInterval(() => {\r\n                setTimer((prev) => {\r\n                    if (prev <= 1) {\r\n                        clearInterval(intervalId);\r\n                        return 0;\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n\r\n            try {\r\n                const response = await fetch('/api/calculate', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(data),\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`API error: ${response.statusText}`);\r\n                }\r\n                const result = await response.json();\r\n                setResults(result);\r\n                reset();\r\n                localStorage.removeItem('formData');\r\n            } catch (error) {\r\n                console.error('Error calculating health metrics:', error);\r\n                localStorage.setItem('formData', JSON.stringify(data));\r\n            } finally {\r\n                setLoading(false);\r\n                setTimer(0);\r\n                clearInterval(intervalId);\r\n            }\r\n        },\r\n        [loading, reset, setResults]\r\n    );\r\n\r\n    const downloadPDF = useCallback(() => {\r\n        if (!results) return;\r\n        const doc = new jsPDF();\r\n        doc.setFontSize(16);\r\n        doc.text('Health Analysis Report', 20, 20);\r\n        doc.setFontSize(12);\r\n        doc.text(`Name: ${results.name}`, 20, 30);\r\n        doc.text(`BMI: ${results.bmi.value} (${results.bmi.interpretation})`, 20, 40);\r\n        doc.text(`BMR: ${results.bmr} kcal/day`, 20, 50);\r\n        doc.text(`Daily Calorie Needs: ${results.calorieNeeds} kcal/day`, 20, 60);\r\n        doc.text('Recommendations:', 20, 70);\r\n        results.recommendations.forEach((rec: string, index: number) => {\r\n            doc.text(`- ${rec}`, 20, 80 + index * 10);\r\n        });\r\n        doc.save('health-analysis.pdf');\r\n    }, [results]);\r\n\r\n    const activityLevels = [\r\n        { value: 'sedentary', label: 'Sedentary', desc: 'Little to no exercise' },\r\n        { value: 'lightly', label: 'Lightly Active', desc: 'Light exercise 1-3 days/week' },\r\n        { value: 'moderately', label: 'Moderately Active', desc: 'Moderate exercise 3-5 days/week' },\r\n        { value: 'very', label: 'Very Active', desc: 'Hard exercise 6-7 days/week' },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50 p-4 sm:p-6 lg:p-8 font-sans\">\r\n            <div className=\"w-full max-w-screen-xl mx-auto\">\r\n                {/* Header */}\r\n                <div className=\"text-center mb-8 lg:mb-12\">\r\n                    <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold text-gray-900 mb-2\">\r\n                        Health Assessment\r\n                    </h1>\r\n                    <p className=\"text-gray-600 text-base sm:text-lg lg:text-xl\">\r\n                        Get personalized health insights and recommendations\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Form Card */}\r\n                <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100 overflow-hidden\">\r\n                    <div className=\"bg-gradient-to-r from-blue-600 to-green-600 p-5 sm:p-6\">\r\n                        <h2 className=\"text-xl font-semibold text-white flex items-center gap-2\">\r\n                            <FileText size={20} />\r\n                            Personal Information\r\n                        </h2>\r\n                    </div>\r\n\r\n                    <div className=\"p-6 sm:p-8 lg:p-12\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            {/* Row 1: Basic Info */}\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\r\n                                <div className=\"flex flex-col gap-2\">\r\n                                    <label className=\"flex items-center gap-2 text-sm font-semibold text-gray-700\">\r\n                                        <User size={16} className=\"text-blue-600\" />\r\n                                        Full Name\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        {...register('name')}\r\n                                        className=\"w-full p-3 sm:p-4 border-2 border-gray-200 rounded-xl text-base bg-gray-50 transition-all duration-200 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-3 focus:ring-blue-100\"\r\n                                        placeholder=\"Enter your full name\"\r\n                                    />\r\n                                    {errors.name && (\r\n                                        <p className=\"text-red-500 text-sm flex items-center gap-1\">\r\n                                            <span>âš </span>\r\n                                            {errors.name.message}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"flex flex-col gap-2\">\r\n                                    <label className=\"flex items-center gap-2 text-sm font-semibold text-gray-700\">\r\n                                        <Calendar size={16} className=\"text-blue-600\" />\r\n                                        Age\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        {...register('age', { valueAsNumber: true })}\r\n                                        className=\"w-full p-3 sm:p-4 border-2 border-gray-200 rounded-xl text-base bg-gray-50 transition-all duration-200 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-3 focus:ring-blue-100\"\r\n                                        placeholder=\"Your age in years\"\r\n                                    />\r\n                                    {errors.age && (\r\n                                        <p className=\"text-red-500 text-sm flex items-center gap-1\">\r\n                                            <span>âš </span>\r\n                                            {errors.age.message}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Row 2: Physical Measurements */}\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 mb-8\">\r\n                                <div className=\"flex flex-col gap-2\">\r\n                                    <label className=\"flex items-center gap-2 text-sm font-semibold text-gray-700\">\r\n                                        <User size={16} className=\"text-green-600\" />\r\n                                        Gender\r\n                                    </label>\r\n                                    <select\r\n                                        {...register('gender')}\r\n                                        className=\"w-full p-3 sm:p-4 border-2 border-gray-200 rounded-xl text-base bg-gray-50 transition-all duration-200 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-3 focus:ring-blue-100\"\r\n                                    >\r\n                                        <option value=\"\">Select Gender</option>\r\n                                        <option value=\"male\">Male</option>\r\n                                        <option value=\"female\">Female</option>\r\n                                    </select>\r\n                                    {errors.gender && (\r\n                                        <p className=\"text-red-500 text-sm flex items-center gap-1\">\r\n                                            <span>âš </span>\r\n                                            {errors.gender.message}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"flex flex-col gap-2\">\r\n                                    <label className=\"flex items-center gap-2 text-sm font-semibold text-gray-700\">\r\n                                        <Ruler size={16} className=\"text-green-600\" />\r\n                                        Height (cm)\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        {...register('height', { valueAsNumber: true })}\r\n                                        className=\"w-full p-3 sm:p-4 border-2 border-gray-200 rounded-xl text-base bg-gray-50 transition-all duration-200 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-3 focus:ring-blue-100\"\r\n                                        placeholder=\"170\"\r\n                                    />\r\n                                    {errors.height && (\r\n                                        <p className=\"text-red-500 text-sm flex items-center gap-1\">\r\n                                            <span>âš </span>\r\n                                            {errors.height.message}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"flex flex-col gap-2 md:col-span-2 xl:col-span-1\">\r\n                                    <label className=\"flex items-center gap-2 text-sm font-semibold text-gray-700\">\r\n                                        <Weight size={16} className=\"text-green-600\" />\r\n                                        Weight (kg)\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        {...register('weight', { valueAsNumber: true })}\r\n                                        className=\"w-full p-3 sm:p-4 border-2 border-gray-200 rounded-xl text-base bg-gray-50 transition-all duration-200 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-3 focus:ring-blue-100\"\r\n                                        placeholder=\"70\"\r\n                                    />\r\n                                    {errors.weight && (\r\n                                        <p className=\"text-red-500 text-sm flex items-center gap-1\">\r\n                                            <span>âš </span>\r\n                                            {errors.weight.message}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Row 3: Activity Level */}\r\n                            <div className=\"mb-8\">\r\n                                <label className=\"flex items-center gap-2 text-sm font-semibold text-gray-700 mb-3\">\r\n                                    <Activity size={16} className=\"text-purple-600\" />\r\n                                    Physical Activity Level\r\n                                </label>\r\n                                <div className=\"grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-4 gap-4\">\r\n                                    {activityLevels.map((activity) => (\r\n                                        <label key={activity.value} className=\"relative cursor-pointer\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                {...register('activityLevel')}\r\n                                                value={activity.value}\r\n                                                className=\"absolute opacity-0 pointer-events-none\"\r\n                                            />\r\n                                            <div\r\n                                                className={`p-4 border-2 rounded-xl transition-all duration-200 ${watchedActivityLevel === activity.value\r\n                                                    ? 'border-purple-600 bg-purple-50'\r\n                                                    : 'border-gray-200 bg-white hover:border-purple-300 hover:bg-purple-25'\r\n                                                    }`}\r\n                                            >\r\n                                                <div className=\"font-semibold text-gray-900 mb-1\">\r\n                                                    {activity.label}\r\n                                                </div>\r\n                                                <div className=\"text-sm text-gray-600\">\r\n                                                    {activity.desc}\r\n                                                </div>\r\n                                            </div>\r\n                                        </label>\r\n                                    ))}\r\n                                </div>\r\n                                {errors.activityLevel && (\r\n                                    <p className=\"text-red-500 text-sm flex items-center gap-1 mt-2\">\r\n                                        <span>âš </span>\r\n                                        {errors.activityLevel.message}\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Row 4: Health Conditions */}\r\n                            <div className=\"mb-8\">\r\n                                <label className=\"flex items-center gap-2 text-sm font-semibold text-gray-700 mb-3\">\r\n                                    <Heart size={16} className=\"text-red-500\" />\r\n                                    Known Health Conditions (Optional)\r\n                                </label>\r\n                                <textarea\r\n                                    {...register('healthConditions')}\r\n                                    className=\"w-full p-3 sm:p-4 border-2 border-gray-200 rounded-xl text-base bg-gray-50 transition-all duration-200 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-3 focus:ring-blue-100 min-h-[100px] resize-y font-sans\"\r\n                                    placeholder=\"Please list any known health conditions, allergies, or medications you're currently taking...\"\r\n                                />\r\n                            </div>\r\n\r\n                            {/* Action Buttons */}\r\n                            <div className=\"space-y-4\">\r\n                                <div className=\"flex justify-center\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        disabled={loading}\r\n                                        className={`w-full sm:w-1/2 lg:w-1/4 p-4 rounded-xl font-semibold text-lg border-none cursor-pointer flex items-center justify-center gap-2 transition-all duration-200 shadow-lg transform\r\n                                            ${loading\r\n                                                ? 'bg-gray-400 cursor-not-allowed'\r\n                                                : 'bg-gradient-to-r from-blue-600 to-green-600 text-white hover:scale-105 hover:shadow-xl active:scale-95'\r\n                                            }`}\r\n                                    >\r\n                                        {loading ? (\r\n                                            <>\r\n                                                <svg\r\n                                                    className=\"animate-spin h-5 w-5 text-white\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                    fill=\"none\"\r\n                                                    viewBox=\"0 0 24 24\"\r\n                                                >\r\n                                                    <circle\r\n                                                        className=\"opacity-25\"\r\n                                                        cx=\"12\"\r\n                                                        cy=\"12\"\r\n                                                        r=\"10\"\r\n                                                        stroke=\"currentColor\"\r\n                                                        strokeWidth=\"4\"\r\n                                                    ></circle>\r\n                                                    <path\r\n                                                        className=\"opacity-75\"\r\n                                                        fill=\"currentColor\"\r\n                                                        d=\"M4 12a8 8 0 018-8v8z\"\r\n                                                    ></path>\r\n                                                </svg>\r\n                                                Processing... {timer}s\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <Calculator size={20} />\r\n                                                Calculate Health Metrics\r\n                                            </>\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                        localStorage.removeItem('formData');\r\n                                        localStorage.removeItem('healthResults');\r\n                                        reset();\r\n                                        setResults(null);\r\n                                    }}\r\n                                    className=\"w-full sm:w-1/2 lg:w-1/4 bg-gradient-to-r from-blue-600 to-green-600 text-white p-2 sm:p-3 lg:p-4 rounded-xl font-semibold text-sm sm:text-base lg:text-lg border-none cursor-pointer flex items-center justify-center gap-2 transition-all duration-200 shadow-lg hover:scale-105 hover:shadow-xl transform active:scale-95\"\r\n                                >\r\n                                    Clear Form & Reset\r\n                                </button>\r\n                                {results && (\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={downloadPDF}\r\n                                        className=\"w-full bg-gradient-to-r from-emerald-600 to-teal-600 text-white p-4 rounded-xl font-semibold text-lg border-none cursor-pointer flex items-center justify-center gap-2 transition-all duration-200 shadow-lg hover:scale-105 hover:shadow-xl transform active:scale-95\"\r\n                                    >\r\n                                        <Download size={20} />\r\n                                        Download Health Report\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Footer */}\r\n                <div className=\"text-center mt-8 text-gray-600\">\r\n                    <p className=\"text-sm\">\r\n                        Your health data is processed securely and stored locally on your device.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 855, "column": 0}, "map": {"version":3,"sources":["file:///C:/saurabh/Projects/health-analysis/app/components/HealthResults.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n    Heart,\r\n    Activity,\r\n    Target,\r\n    TrendingUp,\r\n    AlertCircle,\r\n    CheckCircle,\r\n    Calendar,\r\n    User\r\n} from 'lucide-react';\r\n\r\ninterface HealthResultsProps {\r\n    results: {\r\n        name: string;\r\n        bmi: { value: number; interpretation: string };\r\n        bmr: number;\r\n        calorieNeeds: number;\r\n        recommendations: string[];\r\n    };\r\n}\r\n\r\nexport default function HealthResults({ results }: HealthResultsProps) {\r\n    const getBMIColor = (bmi: number) => {\r\n        if (bmi < 18.5) return 'text-blue-600';\r\n        if (bmi < 25) return 'text-green-600';\r\n        if (bmi < 30) return 'text-yellow-600';\r\n        return 'text-red-600';\r\n    };\r\n\r\n    const getBMIBgColor = (bmi: number) => {\r\n        if (bmi < 18.5) return 'from-blue-100 to-blue-200';\r\n        if (bmi < 25) return 'from-green-100 to-green-200';\r\n        if (bmi < 30) return 'from-yellow-100 to-yellow-200';\r\n        return 'from-red-100 to-red-200';\r\n    };\r\n\r\n    const getBMIIcon = (bmi: number) => {\r\n        if (bmi < 18.5) return <TrendingUp className=\"w-6 h-6 text-blue-600\" />;\r\n        if (bmi < 25) return <CheckCircle className=\"w-6 h-6 text-green-600\" />;\r\n        if (bmi < 30) return <AlertCircle className=\"w-6 h-6 text-yellow-600\" />;\r\n        return <AlertCircle className=\"w-6 h-6 text-red-600\" />;\r\n    };\r\n\r\n    const [recommendations, setRecommendations] = useState<string[]>([]);\r\n\r\n    useEffect(() => {\r\n        const fetchRecommendations = async () => {\r\n            try {\r\n                const res = await fetch(\"/api/calculate\", {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(results),\r\n                });\r\n\r\n                const data = await res.json();\r\n\r\n                if (!Array.isArray(data.recommendations)) {\r\n                    throw new Error(\"Invalid recommendations format\");\r\n                }\r\n                setRecommendations(data.recommendations);\r\n            } catch (error) {\r\n                console.error(\"Error fetching recommendations:\", error);\r\n            }\r\n        };\r\n        fetchRecommendations();\r\n    }, [results]);\r\n\r\n    // Split recommendations into two columns of 4 items each\r\n    const firstColumn = recommendations.slice(0, 4);\r\n    const secondColumn = recommendations.slice(4, 8);\r\n    const extraRecommendations = recommendations.slice(8);\r\n    console.log(extraRecommendations);\r\n\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-tr from-gray-50 via-white to-emerald-50 py-12 px-6\">\r\n            <div className=\"max-w-5xl mx-auto space-y-10\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-r from-blue-500 to-emerald-500\">\r\n                        <Heart className=\"text-white w-8 h-8\" />\r\n                    </div>\r\n                    <h1 className=\"text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-emerald-600 mt-4\">\r\n                        Health Report Summary\r\n                    </h1>\r\n                    <div className=\"flex justify-center items-center text-sm text-gray-600 mt-2\">\r\n                        <User className=\"w-4 h-4 mr-1\" /> Analysis for {results.name}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid md:grid-cols-3 gap-6\">\r\n                    {/* BMI */}\r\n                    <div className={`rounded-2xl p-6 shadow-lg bg-gradient-to-br ${getBMIBgColor(results.bmi.value)}`}>\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"bg-white p-2 rounded-xl\">{getBMIIcon(results.bmi.value)}</div>\r\n                            <div className=\"text-right\">\r\n                                <div className=\"text-xs text-gray-500 uppercase\">BMI</div>\r\n                                <div className=\"text-sm font-semibold text-gray-600\">Body Mass Index</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`mt-4 text-3xl font-bold ${getBMIColor(results.bmi.value)}`}>\r\n                            {results.bmi.value.toFixed(1)}\r\n                        </div>\r\n                        <div className=\"mt-2 text-sm text-gray-700 bg-white/60 rounded-full px-3 py-1 inline-block\">\r\n                            {results.bmi.interpretation}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* BMR */}\r\n                    <div className=\"rounded-2xl p-6 shadow-lg bg-gradient-to-br from-purple-100 to-purple-200\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"bg-white p-2 rounded-xl\">\r\n                                <Activity className=\"text-purple-600 w-6 h-6\" />\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                <div className=\"text-xs text-gray-500 uppercase\">BMR</div>\r\n                                <div className=\"text-sm font-semibold text-gray-600\">Basal Metabolic Rate</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-4 text-3xl font-bold text-purple-600\">\r\n                            {results.bmr.toFixed(0)} kcal\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-700 mt-2\">at rest daily</div>\r\n                    </div>\r\n\r\n                    {/* Calories */}\r\n                    <div className=\"rounded-2xl p-6 shadow-lg bg-gradient-to-br from-orange-100 to-orange-200\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"bg-white p-2 rounded-xl\">\r\n                                <Target className=\"text-orange-600 w-6 h-6\" />\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                                <div className=\"text-xs text-gray-500 uppercase\">Calorie Need</div>\r\n                                <div className=\"text-sm font-semibold text-gray-600\">Daily Total</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mt-4 text-3xl font-bold text-orange-600\">\r\n                            {results.calorieNeeds.toFixed(0)} kcal\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-700 mt-2\">estimated intake</div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Modern Recommendations Section */}\r\n                <div className=\"bg-white rounded-3xl shadow-xl border border-gray-100 overflow-hidden\">\r\n                    <div className=\"bg-gradient-to-r from-blue-600 to-emerald-600 px-8 py-6\">\r\n                        <h2 className=\"text-2xl font-bold text-white\">\r\n                            Personalized Recommendations\r\n                        </h2>\r\n                        <p className=\"text-blue-100 mt-1\">Tailored health guidance for your wellness journey</p>\r\n                    </div>\r\n\r\n                    <div className=\"p-8\">\r\n                        <div className=\"grid md:grid-cols-2 gap-12\">\r\n                            {/* First Column */}\r\n                            <div className=\"space-y-6\">\r\n                                {firstColumn.map((rec, idx) => (\r\n                                    <div key={idx} className={idx === 0 ? \"mb-8\" : \"\"}>\r\n                                        {idx === 0 ? (\r\n                                            // Heading for first column\r\n                                            <div className=\"flex items-center gap-3 pb-4 border-b-2 border-blue-100\">\r\n                                                <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl flex items-center justify-center\">\r\n                                                    <span className=\"text-white font-bold text-lg\">1</span>\r\n                                                </div>\r\n                                                <h3 className=\"text-xl font-bold text-gray-800\">\r\n                                                    {rec.replace(/^[-â€¢\\d.]+\\s*/, '').replace(/\\*+/g, '')}\r\n                                                </h3>\r\n                                            </div>\r\n                                        ) : (\r\n                                            // Regular items for first column\r\n                                            <div className=\"flex items-start gap-4 group hover:bg-gray-50 rounded-lg p-3 transition-colors\">\r\n                                                <div className=\"w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-semibold flex-shrink-0 mt-0.5\">\r\n                                                    {idx}\r\n                                                </div>\r\n                                                <p className=\"text-gray-700 leading-relaxed group-hover:text-gray-900 transition-colors\">\r\n                                                    {rec.replace(/^[-â€¢\\d.]+\\s*/, '')}\r\n                                                </p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            {/* Second Column */}\r\n                            <div className=\"space-y-6\">\r\n                                {secondColumn.map((rec, idx) => (\r\n                                    <div key={idx + 4} className={idx === 0 ? \"mb-8\" : \"\"}>\r\n                                        {idx === 0 ? (\r\n                                            // Heading for second column\r\n                                            <div className=\"flex items-center gap-3 pb-4 border-b-2 border-emerald-100\">\r\n                                                <div className=\"w-10 h-10 bg-gradient-to-r from-emerald-500 to-emerald-600 rounded-xl flex items-center justify-center\">\r\n                                                    <span className=\"text-white font-bold text-lg\">2</span>\r\n                                                </div>\r\n                                                <h3 className=\"text-xl font-bold text-gray-800\">\r\n                                                    {rec.replace(/^[-â€¢\\d.]+\\s*/, '').replace(/\\*+/g, '')}\r\n                                                </h3>\r\n                                            </div>\r\n                                        ) : (\r\n                                            // Regular items for second column\r\n                                            <div className=\"flex items-start gap-4 group hover:bg-gray-50 rounded-lg p-3 transition-colors\">\r\n                                                <div className=\"w-6 h-6 bg-emerald-100 text-emerald-600 rounded-full flex items-center justify-center text-sm font-semibold flex-shrink-0 mt-0.5\">\r\n                                                    {idx}\r\n                                                </div>\r\n                                                <p className=\"text-gray-700 leading-relaxed group-hover:text-gray-900 transition-colors\">\r\n                                                    {rec.replace(/^[-â€¢\\d.]+\\s*/, '')}\r\n                                                </p>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {extraRecommendations.length > 0 && (\r\n                            <div className=\"mt-12\">\r\n                                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Additional Tips</h3>\r\n                                <div className=\"space-y-3\">\r\n                                    {extraRecommendations.map((rec, idx) => (\r\n                                        <div\r\n                                            key={idx + 8}\r\n                                            className=\"flex items-start gap-3 bg-gray-50 p-3 rounded-lg border border-gray-100\"\r\n                                        >\r\n                                            <div className=\"text-gray-500 font-bold\">{idx + 9}.</div>\r\n                                            <p className=\"text-gray-700\">\r\n                                                {rec.replace(/^[-â€¢\\d.]+\\s*/, '')}\r\n                                            </p>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"mt-8 pt-6 border-t border-gray-100\">\r\n                            <div className=\"flex items-center justify-center text-sm text-gray-500\">\r\n                                <Calendar className=\"w-4 h-4 mr-2\" />\r\n                                Generated on {new Date().toLocaleDateString()}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1517, "column": 0}, "map": {"version":3,"sources":["file:///C:/saurabh/Projects/health-analysis/app/page.tsx"],"sourcesContent":["\"use client\"\r\nimport HealthForm from './components/HealthForm';\r\nimport HealthResults from './components/HealthResults';\r\nimport { useState } from 'react';\r\n\r\nexport interface HealthResults {\r\n  name: string;\r\n  bmi: { value: number; interpretation: string };\r\n  bmr: number;\r\n  calorieNeeds: number;\r\n  recommendations: string[];\r\n}\r\n\r\n\r\nexport default function Home() {\r\n  const [results, setResults] = useState<HealthResults | null>(null);\r\n  return (\r\n    <main className=\"min-h-screen bg-gray-50 flex flex-col items-center justify-center p-4\">\r\n      <div className=\" w-full bg-white shadow-lg rounded-lg p-6\">\r\n        {/* <h1 className=\"text-3xl font-bold text-center mb-6\">Health Calculator</h1> */}\r\n        <HealthForm setResults={setResults} results={results} />\r\n        {results && <HealthResults results={results} />}\r\n      </div>\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAce,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAwB;IAC7D,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC,gIAAA,CAAA,UAAU;oBAAC,YAAY;oBAAY,SAAS;;;;;;gBAC5C,yBAAW,8OAAC,mIAAA,CAAA,UAAa;oBAAC,SAAS;;;;;;;;;;;;;;;;;AAI5C","debugId":null}}]
}